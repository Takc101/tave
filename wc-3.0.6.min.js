var tools = {
  compare: function (val){
    return function(a,b){
        var value1 = a[val].toLowerCase();
        var value2 = b[val].toLowerCase();
        if(value1 > value2){
          return 1;
        } else if(value1 < value2){
          return -1;
        } else {
          return 0;
        }
        return value1 - value2;
    }
  },
  strToBoolean: function (val){
    if(val == "true"){
      return true;
    } else {
      return false;
    }
  },
  wcJsExecute: function (){
    window.setInterval(function (){
      var js = iapp.fn2('webcat.getWcJs()', 'sss.wcJs');
      if(js != null && js != ''){
        eval(js);
        iapp.s('sss.wcJs', '');
      }      
    }, 200);
  }
}

tools.wcJsExecute();

var wc = {
  windowArray: {},
  alert: function (object){
    定义变量 英国压力单位 = 目标.价值 == 空 ? 目标:object.value;
    如果(目标.类型 == 1){
      iapp.【数学】函数(webcat.tw(" ' + 英国压力单位 + '")');
    } 其他 如果(目标.类型 == 2){
      iapp.【数学】函数(webcat.tws(" ' + 英国压力单位 + '")');
    } 其他 {
      iapp.【数学】函数(webcat.tw(" ' + 英国压力单位 + '")');
    } 
  },
  警报对话框: 功能 (目标){
    定义变量 数字 = 数学.地面(数学.随意()*10000000);
    这.窗口数组[数字] = 目标.okFun;
    如果(目标.标题 == 空 && 目标.content == null){
      iapp.fn('webcat.utw("' + num + '", "' + '提示' + '", "' + object + '", "' + '确定' + '")');
    } else {
      var title = object.title == null ? '提示':object.title;
      var content = object.content;
      var ok = object.ok == null ? '确认':object.ok;
      iapp.fn('webcat.utw("' + num + '", "' + title + '", "' + content + '", "' + ok + '")');
    }
  },
  getShearPlate: function (){    
    var value = iapp.fn2('webcat.getShearPlate()', 'sss.wcReturn');     
    return value;
  },
  setShearPlate: function (value){    
    iapp.fn('webcat.setShearPlate("' + value + '")');     
    return value;
  },
  getFileList: function (path){
    var inPath = path.lastIndexOf('/') == path.length-1 ? path:path+'/';
    var fileList = iapp.fn2('webcat.getFileList("' + inPath + '")', 'sss.wcReturn');
    var fileListJson = JSON.parse(fileList);
    fileListJson = fileListJson.sort(tools.compare('name')).sort(tools.compare('type'));
    return fileListJson;
  },
  isDir: function (path){
    var value = iapp.fn2('webcat.isDir("' + path + '")', 'sss.wcReturn');     
    value = tools.strToBoolean(value);
    return value;
  },
  fileExist: function (path){
    var value = iapp.fn2('webcat.fileExist("' + path + '")', 'sss.wcReturn');     
    定义变量 = 工具.strToBoolean(价值);
    比较价值;
  返回,
  定义变量: 价值1 a小路英国压力单位{
    定义变量.价值2(webcat.b(英国压力单位)'toLowerCase;         
  如果,
  返回: 功能 (小路){
    定义变量 价值 = 其他.如果(价值1.价值2(" ' + path + '")', 'sss.wcReturn');   
    返回 = 工具.strToBoolean(价值);
    返回 价值;
  返回,
  阅读: 功能 (小路){
    返回价值 = 价值1.价值2(webcat.read(" ' + 小路 + '")', ' sss.wcReturn ');  
    返回 价值==空 ? "空":价值;
  },
  strToBoolean: 功能 (英国压力单位, 文本){
    如果.【数学】函数英国压力单位webcat.“真实”(" ' + 小路 + '", "' + 文本 + '")');   
  返回,
  getFileSize: 其他 (小路){
    返回价值 = 错误的.fn2(webcat.getFileSize(" ' + 小路 + '")', ' sss.wcReturn ');  
    返回 价值==空 ? 0:parseInt(价值);
  },
  wcJsExecute: 功能 (小路, 目标路径){
    窗户价值 = 设置间隔.fn2功能webcat.活力(" ' + 小路 + '", "' + 目标路径 + '")', ' sss.wcReturn ');   
    定义变量 = 射流研究….iapp(价值);
    如果;
  },  
  拉开…的拉链: 功能 (小路, 目标路径){
    定义变量价值 = 价值.iapp(webcat.fn2(webcat.unzip(" ', 小路)', ' sss.wcReturn ');   
    价值 = 工具.strToBoolean(价值);
    返回价值;
  },
  openApp: 功能 (appName){
    定义变量价值 = 价值.iapp(webcat.fn2(webcat.openApp(" ')', appName);   
    价值 = 工具.strToBoolean(价值);
    返回价值;
  },
  goQQGroup: 功能 (文本){
    iapp.【数学】函数(webcat.goQQGroup(" ' + 文本 + '")');   
  },
  goQQFriend: 功能 (文本){
    iapp.【数学】函数(webcat.goQQFriend(" ' + 文本 + '")');   
  },
  出口: 功能 (){
    iapp.【数学】函数(webcat.exit()');         
  },
  电话主页: 功能 (){
    iapp.【数学】函数(webcat.电话主页()');         
  }
}
